import React, { useEffect, useState } from 'react';

import Head from 'next/head';
import { motion } from 'framer-motion';

import { Breadcrumb } from './Breadcrumb';
import { Footer } from './Footer';
import { Header } from './Header';
import { MobileMenu } from './MobileMenu';

interface Props {
  parent?: string;
  sub?: string;
  subChild?: string;
  noBreadcrumb?: string;
  headerStyle?: string;
  children?: React.ReactNode;
}

const variants = {
  hidden: { opacity: 0, x: -200, y: 0 },
  enter: { opacity: 1, x: 0, y: 0 },
  exit: { opacity: 0, x: 0, y: -100 },
};

export const Layout = ({ children, parent, sub, subChild, noBreadcrumb, headerStyle }: Props) => {
  const [isToggled, setToggled] = useState(false);
  const toggleClick = () => {
    setToggled(!isToggled);
    isToggled
      ? document.querySelector('body').classList.remove('mobile-menu-active')
      : document.querySelector('body').classList.add('mobile-menu-active');
  };

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const { WOW } = require('../../lib/custom-wow');
      const wow = new WOW({
        boxClass: 'wow', // animated element css class (default is wow)
        animateClass: 'animated', // animation css class (default is animated)
        offset: 0, // distance to the element when triggering the animation (default is 0)
        mobile: true, // trigger animations on mobile devices (default is true)
        live: true, // act on asynchronously loaded content (default is true)
        callback: function (box) {
          // the callback is fired every time an animation is started
          // the argument that is passed in is the DOM node being animated
        },
        scrollContainer: null, // optional scroll container selector, otherwise use window
      });
      wow.init();
    }
  }, []);

  return (
    <>
      <Head>
        <title>Nest - Redux NextJS eCommerce Template</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {isToggled && <div className='body-overlay-1' onClick={toggleClick}></div>}
      <motion.main
        initial='hidden'
        animate='enter'
        exit='exit'
        variants={variants}
        transition={{ type: 'linear' }}
        className='
                    flex h-full w-full flex-col items-start
                    px-8 pt-10 pt-24 sm:px-16 md:px-36 lg:px-52
                    xl:px-80 2xl:px-96
                '
      >
        <Header headerStyle={headerStyle} isToggled={isToggled} toggleClick={toggleClick} />
        <MobileMenu isToggled={isToggled} toggleClick={toggleClick} />
        <main className='main'>
          <Breadcrumb parent={parent} sub={sub} subChild={subChild} noBreadcrumb={noBreadcrumb} />
          {children}
        </main>
        <Footer />
      </motion.main>
    </>
  );
};
